name: publish to nuget
on:
  push:
    branches:
      - master # Default release branch
jobs:
  publish:
    name: list on nuget
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.201
      # Publish
      - name: publish DeathRecord on version change
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: VRDR/DeathRecord.csproj # Relative to repository root
          VERSION_FILE_PATH: VRDR/DeathRecord.csproj # Filepath with version info, relative to repository root. Defaults to project file
          VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: true # Tag the project when the version has changed
          TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: VRDR
      - name: publish Messaging on version change
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: VRDR.Messaging/VRDRMessaging.csproj # Relative to repository root
          VERSION_FILE_PATH: VRDR.Messaging/VRDRMessaging.csproj # Filepath with version info, relative to repository root. Defaults to project file
          VERSION_REGEX: <Version>(.*)<\/Version> # Regex pattern to extract version info in a capturing group
          TAG_COMMIT: true # Tag the project when the version has changed
          TAG_FORMAT: v* # Format of the git tag, [*] gets replaced with version
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          PACKAGE_NAME: VRDR.Messaging