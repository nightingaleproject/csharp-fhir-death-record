<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRDRMessaging</name>
    </assembly>
    <members>
        <member name="T:VRDR.AckMessage">
            <summary>Class <c>AckMessage</c> supports the acknowledgment of other messages.</summary>
        </member>
        <member name="M:VRDR.AckMessage.#ctor(VRDR.BaseMessage,System.String)">
            <summary>Constructor that creates an acknowledgement for the specified message.</summary>
            <param name="messageToAck">the message to create an acknowledgement for.</param>
            <param name="source">the endpoint identifier that the ack message will be sent from.</param>
        </member>
        <member name="M:VRDR.AckMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct an AckMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the AckMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.AckMessage.#ctor(System.String,System.String,System.String)">
            <summary>Constructor that creates an acknowledgement for the specified message.</summary>
            <param name="messageId">the id of the message to create an acknowledgement for.</param>
            <param name="destination">the endpoint identifier that the ack message will be sent to.</param>
            <param name="source">the endpoint identifier that the ack message will be sent from.</param>
        </member>
        <member name="P:VRDR.AckMessage.AckedMessageId">
            <summary>The id of the message that is being acknowledged by this message</summary>
            <value>the message id.</value>
        </member>
        <member name="T:VRDR.BaseMessage">
            <summary>Class <c>BaseMessage</c> is the base class of all messages.</summary>
        </member>
        <member name="F:VRDR.BaseMessage.MessageBundle">
            <summary>Bundle that contains the message.</summary>
        </member>
        <member name="F:VRDR.BaseMessage.Header">
            <summary>MessageHeader that contains the message header.</summary>
        </member>
        <member name="M:VRDR.BaseMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a BaseMessage from a FHIR Bundle. This constructor will also validate that the Bundle
            represents a FHIR message.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the BaseMessage</param>
        </member>
        <member name="M:VRDR.BaseMessage.findEntry``1(Hl7.Fhir.Model.ResourceType)">
            <summary>
            Find the first Entry within the message Bundle that contains a Resource of the specified type and return that resource.
            </summary>
            <param name="type">the type of FHIR resource to look for</param>
            <typeparam name="T">the class of the FHIR resource to return, must match with specified type:</typeparam>
            <returns></returns>
        </member>
        <member name="M:VRDR.BaseMessage.#ctor(System.String)">
            <summary>Constructor that creates a new, empty message for the specified message type.</summary>
        </member>
        <member name="M:VRDR.BaseMessage.ToXML">
            <summary>Helper method to return a XML string representation of this DeathRecordSubmission.</summary>
            <returns>a string representation of this DeathRecordSubmission in XML format</returns>
        </member>
        <member name="M:VRDR.BaseMessage.ToXml">
            <summary>Helper method to return a XML string representation of this DeathRecordSubmission.</summary>
            <returns>a string representation of this DeathRecordSubmission in XML format</returns>
        </member>
        <member name="M:VRDR.BaseMessage.ToJSON">
            <summary>Helper method to return a JSON string representation of this DeathRecordSubmission.</summary>
            <returns>a string representation of this DeathRecordSubmission in JSON format</returns>
        </member>
        <member name="M:VRDR.BaseMessage.ToJson">
            <summary>Helper method to return a JSON string representation of this DeathRecordSubmission.</summary>
            <returns>a string representation of this DeathRecordSubmission in JSON format</returns>
        </member>
        <member name="P:VRDR.BaseMessage.MessageTimestamp">
            <summary>Message timestamp</summary>
            <value>the message timestamp.</value>
        </member>
        <member name="P:VRDR.BaseMessage.MessageId">
            <summary>Message Id</summary>
            <value>the message id.</value>
        </member>
        <member name="P:VRDR.BaseMessage.MessageType">
            <summary>Message Type</summary>
            <value>the message type.</value>
        </member>
        <member name="P:VRDR.BaseMessage.MessageSource">
            <summary>Message Source</summary>
            <value>the message source.</value>
        </member>
        <member name="P:VRDR.BaseMessage.MessageDestination">
            <summary>Message Destination</summary>
            <value>the message destination.</value>
        </member>
        <member name="M:VRDR.BaseMessage.Parse(System.IO.StreamReader,System.Boolean)">
            <summary>
            Parse an XML or JSON serialization of a FHIR Bundle and construct the appropriate subclass of
            BaseMessage. Clients can use the typeof operator to determine the type of message object returned
            </summary>
            <param name="source">the XML or JSON serialization of a FHIR Bundle</param>
            <param name="permissive">if the parser should be permissive when parsing the given string</param>
            <returns></returns>
        </member>
        <member name="T:VRDR.CodingResponseMessage">
            <summary>Class <c>CodingResponseMessage</c> conveys the coded cause of death, race and ethnicity of a decedent.</summary>
        </member>
        <member name="M:VRDR.CodingResponseMessage.#ctor(VRDR.BaseMessage,System.String)">
            <summary>Constructor that creates a response for the specified message.</summary>
            <param name="sourceMessage">the message to create a response for.</param>
            <param name="source">the endpoint identifier that the message will be sent from.</param>
        </member>
        <member name="M:VRDR.CodingResponseMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a CodingResponseMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the CodingResponseMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.CodingResponseMessage.#ctor(System.String,System.String)">
            <summary>Constructor that creates a response for the specified message.</summary>
            <param name="destination">the endpoint identifier that the response message will be sent to.</param>
            <param name="source">the endpoint identifier that the response message will be sent from.</param>
        </member>
        <member name="P:VRDR.CodingResponseMessage.CertificateNumber">
            <summary>Jurisdiction-assigned death certificate number</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.StateIdentifier">
            <summary>Jurisdiction-assigned id</summary>
        </member>
        <member name="T:VRDR.CodingResponseMessage.HispanicOrigin">
            <summary>Ethnicity codes</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.HispanicOrigin.DETHNICE">
            <summary>Edited Hispanic Origin Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.HispanicOrigin.DETHNIC5C">
            <summary>Hispanic Code for Literal</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.Ethnicity">
            <summary>Decedent ethnicity coding</summary>
        </member>
        <member name="T:VRDR.CodingResponseMessage.RaceCode">
            <summary>Race codes</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE1E">
            <summary>First Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE2E">
            <summary>Second Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE3E">
            <summary>Third Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE4E">
            <summary>Fourth Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE5E">
            <summary>Fifth Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE6E">
            <summary>Sixth Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE7E">
            <summary>Seventh Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE8E">
            <summary>Eighth Edited Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE16C">
            <summary>First Am. Ind Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE17C">
            <summary>Second Am. Ind Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE18C">
            <summary>First Other Asian Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE19C">
            <summary>Second Other Asian Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE20C">
            <summary>First Other PI Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE21C">
            <summary>Second Other Pi Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE22C">
            <summary>First Other Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACE23C">
            <summary>Second Other Code</summary>
        </member>
        <member name="F:VRDR.CodingResponseMessage.RaceCode.RACEBRG">
            <summary>Bridged Multiple Race Code</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.Race">
            <summary>Decedent race coding</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.UnderlyingCauseOfDeath">
            <summary>Underlying cause of death code (ICD-10)</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.CauseOfDeathRecordAxis">
            <summary>Record axis coding of cause of death</summary>
        </member>
        <member name="P:VRDR.CodingResponseMessage.CauseOfDeathEntityAxis">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="T:VRDR.CauseOfDeathEntityAxisEntry">
            <summary>Class for structuring a cause of death entity axis entry</summary>
        </member>
        <member name="F:VRDR.CauseOfDeathEntityAxisEntry.DeathCertificateText">
            <summary>A line of the original cause of death on the death certificate</summary>
        </member>
        <member name="F:VRDR.CauseOfDeathEntityAxisEntry.CauseOfDeathConditionId">
            <summary>The identifier of the corresponding cause of death condition entry in the VRDR FHIR document</summary>
        </member>
        <member name="F:VRDR.CauseOfDeathEntityAxisEntry.AssignedCodes">
            <summary>The codes assigned for the DeathCertificateText</summary>
        </member>
        <member name="M:VRDR.CauseOfDeathEntityAxisEntry.#ctor(System.String,System.String)">
            <summary>Create a CauseOfDeathEntityAxisEntry with the specified death certificate text and cause of death
            condition id</summary>
        </member>
        <member name="M:VRDR.CauseOfDeathEntityAxisEntry.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>Create a CauseOfDeathEntityAxisEntry with the specified death certificate text and cause of death
            condition id</summary>
        </member>
        <member name="T:VRDR.CodingUpdateMessage">
            <summary>Class <c>CodingUpdateMessage</c> conveys an updated coded cause of death, race and ethnicity of a decedent.</summary>
        </member>
        <member name="M:VRDR.CodingUpdateMessage.#ctor(VRDR.BaseMessage,System.String)">
            <summary>Constructor that creates an update for the specified message.</summary>
            <param name="sourceMessage">the message to create a response for.</param>
            <param name="source">the endpoint identifier that the message will be sent from.</param>
        </member>
        <member name="M:VRDR.CodingUpdateMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a CodingResponseMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the CodingResponseMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.CodingUpdateMessage.#ctor(System.String,System.String)">
            <summary>Constructor that creates a response for the specified message.</summary>
            <param name="destination">the endpoint identifier that the response message will be sent to.</param>
            <param name="source">the endpoint identifier that the response message will be sent from.</param>
        </member>
        <member name="T:VRDR.DeathRecordSubmission">
            <summary>Class <c>DeathRecordSubmission</c> supports the submission of VRDR records.</summary>
        </member>
        <member name="F:VRDR.DeathRecordSubmission.deathRecord">
            <summary>Bundle that contains the message payload.</summary>
        </member>
        <member name="M:VRDR.DeathRecordSubmission.#ctor">
            <summary>Default constructor that creates a new, empty DeathRecordSubmission.</summary>
        </member>
        <member name="M:VRDR.DeathRecordSubmission.#ctor(VRDR.DeathRecord)">
            <summary>Constructor that takes a VRDR.DeathRecord and wraps it in a DeathRecordSubmission.</summary>
            <param name="record">the VRDR.DeathRecord to create a DeathRecordSubmission for.</param>
        </member>
        <member name="M:VRDR.DeathRecordSubmission.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a DeathRecordSubmission from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the DeathRecordSubmission</param>
            <returns></returns>
        </member>
        <member name="P:VRDR.DeathRecordSubmission.MessagePayload">
            <summary>Message payload</summary>
            <value>the message payload as a FHIR Bundle.</value>
        </member>
        <member name="T:VRDR.DeathRecordUpdate">
            <summary>Class <c>DeathRecordUpdate</c> supports the update of VRDR records.</summary>
        </member>
        <member name="M:VRDR.DeathRecordUpdate.#ctor">
            <summary>Default constructor that creates a new, empty DeathRecordUpdate.</summary>
        </member>
        <member name="M:VRDR.DeathRecordUpdate.#ctor(VRDR.DeathRecord)">
            <summary>Constructor that takes a VRDR.DeathRecord and wraps it in a DeathRecordUpdate.</summary>
            <param name="record">the VRDR.DeathRecord to create a DeathRecordUpdate for.</param>
        </member>
        <member name="M:VRDR.DeathRecordUpdate.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a DeathRecordUpdate from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the DeathRecordUpdate</param>
            <returns></returns>
        </member>
        <member name="T:VRDR.ExtractionErrorMessage">
            <summary>Class <c>ExtractionErrorMessage</c> is used to communicate that initial processing of a DeathRecordSubmission message failed.</summary>
        </member>
        <member name="M:VRDR.ExtractionErrorMessage.#ctor(VRDR.BaseMessage,System.String)">
            <summary>Constructor that creates an extraction error for the specified message.</summary>
            <param name="sourceMessage">the message that could not be processed.</param>
            <param name="source">the endpoint identifier that the message will be sent from.</param>
        </member>
        <member name="M:VRDR.ExtractionErrorMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct an ExtractionErrorMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the ExtractionErrorMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.ExtractionErrorMessage.#ctor(System.String,System.String,System.String)">
            <summary>Constructor that creates an extraction error message for the specified message.</summary>
            <param name="messageId">the id of the message to create an extraction error for.</param>
            <param name="destination">the endpoint identifier that the extraction error message will be sent to.</param>
            <param name="source">the endpoint identifier that the extraction error message will be sent from.</param>
        </member>
        <member name="P:VRDR.ExtractionErrorMessage.FailedMessageId">
            <summary>The id of the message that could not be extracted</summary>
            <value>the message id.</value>
        </member>
        <member name="P:VRDR.ExtractionErrorMessage.Issues">
            <summary>
            List of issues found when attenpting to extract the message
            </summary>
            <value>list of issues</value>
        </member>
        <member name="T:VRDR.CodingErrorMessage">
            <summary>Class <c>CodingErrorMessage</c> is used to communicate that cading of a DeathRecordSubmission message failed.</summary>
        </member>
        <member name="M:VRDR.CodingErrorMessage.#ctor(VRDR.DeathRecordSubmission,System.String)">
            <summary>Constructor that creates a coding error for the specified message.</summary>
            <param name="sourceMessage">the message that could not be processed.</param>
            <param name="source">the endpoint identifier that the message will be sent from.</param>
        </member>
        <member name="M:VRDR.CodingErrorMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct an CodingErrorMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the CodingErrorMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.CodingErrorMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Constructor that creates a coding error message for the specified message.</summary>
            <param name="certificateNumber">the jurisdiction-assigned death certificate number.</param>
            <param name="stateIdentifier">the jurisdiction-assigned id.</param>
            <param name="destination">the endpoint identifier that the coding error message will be sent to.</param>
            <param name="source">the endpoint identifier that the coding error message will be sent from.</param>
        </member>
        <member name="P:VRDR.CodingErrorMessage.CertificateNumber">
            <summary>Jurisdiction-assigned death certificate number</summary>
        </member>
        <member name="P:VRDR.CodingErrorMessage.StateIdentifier">
            <summary>Jurisdiction-assigned id</summary>
        </member>
        <member name="T:VRDR.Issue">
            <summary>
            Class representing an issue detected during message processing.
            </summary>
        </member>
        <member name="F:VRDR.Issue.Severity">
            <summary>
            Severity of the issue
            </summary>
        </member>
        <member name="F:VRDR.Issue.Type">
            <summary>
            Type of the issue
            </summary>
        </member>
        <member name="F:VRDR.Issue.Description">
            <summary>
            Human readable description of the issue
            </summary>
        </member>
        <member name="M:VRDR.Issue.#ctor(System.Nullable{Hl7.Fhir.Model.OperationOutcome.IssueSeverity},System.Nullable{Hl7.Fhir.Model.OperationOutcome.IssueType},System.String)">
            <summary>
            Construct a new Issue
            </summary>
            <param name="severity">the severity of the issue</param>
            <param name="type">the type of issue</param>
            <param name="description">a human readable description of the issue</param>
        </member>
        <member name="T:VRDR.VoidMessage">
            <summary>Class <c>VoidMessage</c> indicates that a previously submitted DeathRecordSubmission message should be voided.</summary>
        </member>
        <member name="M:VRDR.VoidMessage.#ctor">
            <summary>Default constructor that creates a new, empty VoidMessage.</summary>
        </member>
        <member name="M:VRDR.VoidMessage.#ctor(Hl7.Fhir.Model.Bundle)">
            <summary>
            Construct a VoidMessage from a FHIR Bundle.
            </summary>
            <param name="messageBundle">a FHIR Bundle that will be used to initialize the VoidMessage</param>
            <returns></returns>
        </member>
        <member name="M:VRDR.VoidMessage.#ctor(VRDR.DeathRecord)">
            <summary>Constructor that takes a VRDR.DeathRecord and creates a message to void that record.</summary>
            <param name="record">the VRDR.DeathRecord to create a VoidMessage for.</param>
        </member>
        <member name="P:VRDR.VoidMessage.CertificateNumber">
            <summary>Jurisdiction-assigned death certificate number</summary>
        </member>
        <member name="P:VRDR.VoidMessage.StateIdentifier">
            <summary>Jurisdiction-assigned id</summary>
        </member>
    </members>
</doc>
